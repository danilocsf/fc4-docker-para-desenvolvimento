services:
  web:
    build:
      context: .
      dockerfile: Dockerfile.dev
    volumes: 
      - .:/home/node/app
    ports: 
      - 3000:3000
    env_file:
      - .env
     # - path: env.override
     #   required: false
    depends_on:
      db:
        condition: service_healthy
       #restart: true - o container deve ser reiniciado caso a dependência falhar
    #networks:
    #  - externalapi_default 
    extra_hosts:
     - "host.docker.internal:host-gateway"
  
  db:
    image: mysql:8.0.30-debian
    #restart: on-failure:5 | always
    # Poderia utilizar um env file para trazer mais dinamismo
    environment:
      MYSQL_ROOT_PASSWORD: root  
      MYSQL_DATABASE: my_database
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost"]
      interval: 30s # interval - com que frequência o healthcheck é executado
      timeout: 5s # timeout - quanto tempo esperar antes de considerar o healthcheck falhado
      retries: 5 # retries - número de tentativas antes de considerar o container como falhado
      start_period: 10s # start_period - tempo de espera antes de iniciar o healthcheck
      #ou seja, o healthcheck será executado a cada 30 segundos, com um timeout de 5 segundos, 5 tentativas e um tempo de espera inicial de 10 segundos
    #networks:
    #  - externalapi_default    
#networks:
#  externalapi_default:
#    external: true